{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { FocusTrap } from '@material/dom/focus-trap';\nimport { closest } from '@material/dom/ponyfill';\nimport { events, selectors } from './constants';\nimport { MDCBannerFoundation } from './foundation';\n/** Vanilla JS implementation of banner component. */\n\nvar MDCBanner =\n/** @class */\nfunction (_super) {\n  __extends(MDCBanner, _super);\n\n  function MDCBanner() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCBanner.attachTo = function (root) {\n    return new MDCBanner(root);\n  };\n\n  MDCBanner.prototype.initialize = function (focusTrapFactory) {\n    var _this = this;\n\n    if (focusTrapFactory === void 0) {\n      focusTrapFactory = function (el, focusOptions) {\n        return new FocusTrap(el, focusOptions);\n      };\n    }\n\n    this.contentEl = this.root.querySelector(selectors.CONTENT);\n    this.textEl = this.root.querySelector(selectors.TEXT);\n    this.primaryActionEl = this.root.querySelector(selectors.PRIMARY_ACTION);\n    this.secondaryActionEl = this.root.querySelector(selectors.SECONDARY_ACTION);\n    this.focusTrapFactory = focusTrapFactory;\n\n    this.handleContentClick = function (evt) {\n      var target = evt.target;\n\n      if (closest(target, selectors.PRIMARY_ACTION)) {\n        _this.foundation.handlePrimaryActionClick();\n      } else if (closest(target, selectors.SECONDARY_ACTION)) {\n        _this.foundation.handleSecondaryActionClick();\n      }\n    };\n  };\n\n  MDCBanner.prototype.initialSyncWithDOM = function () {\n    this.registerContentClickHandler(this.handleContentClick);\n    this.focusTrap = this.focusTrapFactory(this.root, {\n      initialFocusEl: this.primaryActionEl\n    });\n  };\n\n  MDCBanner.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.deregisterContentClickHandler(this.handleContentClick);\n  };\n\n  MDCBanner.prototype.layout = function () {\n    this.foundation.layout();\n  };\n  /**\n   * Opens the banner and fires events.OPENING to indicate the beginning of its\n   * opening animation and then events.OPENED once the animation finishes.\n   */\n\n\n  MDCBanner.prototype.open = function () {\n    this.foundation.open();\n  };\n  /**\n   * Closes the banner and fires events.CLOSING to indicate the beginning of its\n   * closing animation and then events.CLOSED once the animation finishes.\n   * @param reason Why the banner was closed. Value will be passed to\n   *     events.CLOSING and events.CLOSED via the `event.detail.reason`\n   *     property. Standard values are CloseReason.PRIMARY and\n   *     CloseReason.SECONDARY, but CloseReason.UNSPECIFIED is provided for\n   *     custom handling of programmatic closing of the banner.\n   */\n\n\n  MDCBanner.prototype.close = function (reason) {\n    this.foundation.close(reason);\n  };\n\n  MDCBanner.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take\n    // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n    // methods, we need a separate, strongly typed adapter variable.\n\n\n    var adapter = {\n      addClass: function (className) {\n        _this.root.classList.add(className);\n      },\n      getContentHeight: function () {\n        return _this.contentEl.offsetHeight;\n      },\n      notifyClosed: function (reason) {\n        _this.emit(events.CLOSED, {\n          reason: reason\n        });\n      },\n      notifyClosing: function (reason) {\n        _this.emit(events.CLOSING, {\n          reason: reason\n        });\n      },\n      notifyOpened: function () {\n        _this.emit(events.OPENED, {});\n      },\n      notifyOpening: function () {\n        _this.emit(events.OPENING, {});\n      },\n      notifyActionClicked: function (action) {\n        _this.emit(events.ACTION_CLICKED, {\n          action: action\n        });\n      },\n      releaseFocus: function () {\n        _this.focusTrap.releaseFocus();\n      },\n      removeClass: function (className) {\n        _this.root.classList.remove(className);\n      },\n      setStyleProperty: function (propertyName, value) {\n        _this.root.style.setProperty(propertyName, value);\n      },\n      trapFocus: function () {\n        _this.focusTrap.trapFocus();\n      }\n    };\n    return new MDCBannerFoundation(adapter);\n  };\n\n  Object.defineProperty(MDCBanner.prototype, \"isOpen\", {\n    get: function () {\n      return this.foundation.isOpen();\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCBanner.prototype.getText = function () {\n    return this.textEl.textContent || '';\n  };\n\n  MDCBanner.prototype.setText = function (text) {\n    this.textEl.textContent = text;\n  };\n\n  MDCBanner.prototype.getPrimaryActionText = function () {\n    return this.primaryActionEl.textContent || '';\n  };\n\n  MDCBanner.prototype.setPrimaryActionText = function (actionButtonText) {\n    this.primaryActionEl.textContent = actionButtonText;\n  };\n  /** Returns null if the banner has no secondary action. */\n\n\n  MDCBanner.prototype.getSecondaryActionText = function () {\n    return this.secondaryActionEl ? this.secondaryActionEl.textContent || '' : null;\n  };\n\n  MDCBanner.prototype.setSecondaryActionText = function (actionButtonText) {\n    if (this.secondaryActionEl) {\n      this.secondaryActionEl.textContent = actionButtonText;\n    }\n  };\n\n  MDCBanner.prototype.registerContentClickHandler = function (handler) {\n    this.contentEl.addEventListener('click', handler);\n  };\n\n  MDCBanner.prototype.deregisterContentClickHandler = function (handler) {\n    this.contentEl.removeEventListener('click', handler);\n  };\n\n  return MDCBanner;\n}(MDCComponent);\n\nexport { MDCBanner };","map":{"version":3,"mappings":"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","names":["MDCComponent","FocusTrap","closest","events","selectors","MDCBannerFoundation","__extends","MDCBanner","root","focusTrapFactory","el","focusOptions","contentEl","querySelector","CONTENT","textEl","TEXT","primaryActionEl","PRIMARY_ACTION","secondaryActionEl","SECONDARY_ACTION","handleContentClick","evt","target","_this","foundation","handlePrimaryActionClick","handleSecondaryActionClick","registerContentClickHandler","focusTrap","initialFocusEl","_super","destroy","call","deregisterContentClickHandler","layout","open","reason","close","adapter","addClass","className","classList","add","getContentHeight","offsetHeight","notifyClosed","emit","CLOSED","notifyClosing","CLOSING","notifyOpened","OPENED","notifyOpening","OPENING","notifyActionClicked","action","ACTION_CLICKED","releaseFocus","removeClass","remove","setStyleProperty","propertyName","value","style","setProperty","trapFocus","Object","isOpen","textContent","text","actionButtonText","handler","addEventListener","removeEventListener"],"sources":["component.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}