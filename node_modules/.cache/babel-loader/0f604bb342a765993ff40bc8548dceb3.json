{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { CloseReason, cssClasses, numbers } from './constants';\nvar OPENING = cssClasses.OPENING,\n    OPEN = cssClasses.OPEN,\n    CLOSING = cssClasses.CLOSING;\n/**\n * Foundation class for banner. Responsibilities include opening and closing the\n * banner.\n */\n\nvar MDCBannerFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCBannerFoundation, _super);\n\n  function MDCBannerFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCBannerFoundation.defaultAdapter), adapter)) || this;\n\n    _this.isOpened = false; // Request id for open animation, used to cancel the refresh callback\n    // request on close() and destroy().\n\n    _this.animationFrame = 0; // Timer id for close and open animation, used to cancel the timer on\n    // close() and destroy().\n\n    _this.animationTimer = 0;\n    return _this;\n  }\n\n  Object.defineProperty(MDCBannerFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        getContentHeight: function () {\n          return 0;\n        },\n        notifyClosed: function () {\n          return undefined;\n        },\n        notifyClosing: function () {\n          return undefined;\n        },\n        notifyOpened: function () {\n          return undefined;\n        },\n        notifyOpening: function () {\n          return undefined;\n        },\n        notifyActionClicked: function () {\n          return undefined;\n        },\n        releaseFocus: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        setStyleProperty: function () {\n          return undefined;\n        },\n        trapFocus: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCBannerFoundation.prototype.destroy = function () {\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = 0;\n    clearTimeout(this.animationTimer);\n    this.animationTimer = 0;\n  };\n\n  MDCBannerFoundation.prototype.open = function () {\n    var _this = this;\n\n    this.isOpened = true;\n    this.adapter.notifyOpening();\n    this.adapter.removeClass(CLOSING);\n    this.adapter.addClass(OPENING);\n    var contentHeight = this.adapter.getContentHeight();\n    this.animationFrame = requestAnimationFrame(function () {\n      _this.adapter.addClass(OPEN);\n\n      _this.adapter.setStyleProperty('height', contentHeight + \"px\");\n\n      _this.animationTimer = setTimeout(function () {\n        _this.handleAnimationTimerEnd();\n\n        _this.adapter.trapFocus();\n\n        _this.adapter.notifyOpened();\n      }, numbers.BANNER_ANIMATION_OPEN_TIME_MS);\n    });\n  };\n  /**\n   * @param reason Why the banner was closed. Value will be passed to\n   *     events.CLOSING and events.CLOSED via the `event.detail.reason`\n   *     property. Standard values are CloseReason.PRIMARY and\n   *     CloseReason.SECONDARY, but CloseReason.UNSPECIFIED is provided for\n   *     custom handling of programmatic closing of the banner.\n   */\n\n\n  MDCBannerFoundation.prototype.close = function (reason) {\n    var _this = this;\n\n    if (!this.isOpened) {\n      // Avoid redundant close calls (and events), e.g. repeated interactions as\n      // the banner is animating closed\n      return;\n    }\n\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = 0;\n    this.isOpened = false;\n    this.adapter.notifyClosing(reason);\n    this.adapter.addClass(CLOSING);\n    this.adapter.setStyleProperty('height', '0');\n    this.adapter.removeClass(OPEN);\n    this.adapter.removeClass(OPENING);\n    clearTimeout(this.animationTimer);\n    this.animationTimer = setTimeout(function () {\n      _this.adapter.releaseFocus();\n\n      _this.handleAnimationTimerEnd();\n\n      _this.adapter.notifyClosed(reason);\n    }, numbers.BANNER_ANIMATION_CLOSE_TIME_MS);\n  };\n\n  MDCBannerFoundation.prototype.isOpen = function () {\n    return this.isOpened;\n  };\n\n  MDCBannerFoundation.prototype.handlePrimaryActionClick = function (disableAutoClose) {\n    if (disableAutoClose === void 0) {\n      disableAutoClose = false;\n    }\n\n    if (disableAutoClose) {\n      this.adapter.notifyActionClicked(0\n      /* PRIMARY */\n      );\n    } else {\n      this.close(CloseReason.PRIMARY);\n    }\n  };\n\n  MDCBannerFoundation.prototype.handleSecondaryActionClick = function (disableAutoClose) {\n    if (disableAutoClose === void 0) {\n      disableAutoClose = false;\n    }\n\n    if (disableAutoClose) {\n      this.adapter.notifyActionClicked(1\n      /* SECONDARY */\n      );\n    } else {\n      this.close(CloseReason.SECONDARY);\n    }\n  };\n\n  MDCBannerFoundation.prototype.layout = function () {\n    var contentHeight = this.adapter.getContentHeight();\n    this.adapter.setStyleProperty('height', contentHeight + \"px\");\n  };\n\n  MDCBannerFoundation.prototype.handleAnimationTimerEnd = function () {\n    this.animationTimer = 0;\n    this.adapter.removeClass(OPENING);\n    this.adapter.removeClass(CLOSING);\n  };\n\n  return MDCBannerFoundation;\n}(MDCFoundation);\n\nexport { MDCBannerFoundation };","map":{"version":3,"mappings":"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","names":["MDCFoundation","CloseReason","cssClasses","numbers","OPEN","CLOSING","__extends","adapter","_super","MDCBannerFoundation","defaultAdapter","_this","Object","addClass","getContentHeight","notifyClosed","notifyClosing","notifyOpened","notifyOpening","notifyActionClicked","releaseFocus","removeClass","setStyleProperty","trapFocus","cancelAnimationFrame","animationFrame","clearTimeout","animationTimer","isOpened","OPENING","contentHeight","requestAnimationFrame","setTimeout","handleAnimationTimerEnd","BANNER_ANIMATION_OPEN_TIME_MS","reason","BANNER_ANIMATION_CLOSE_TIME_MS","disableAutoClose","close","PRIMARY","SECONDARY"],"sources":["foundation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}